[{"/home/chrisb/Coding/Personal Projects/Maths-Games/Transformation-Station/src/index.js":"1","/home/chrisb/Coding/Personal Projects/Maths-Games/Transformation-Station/src/App.js":"2","/home/chrisb/Coding/Personal Projects/Maths-Games/Transformation-Station/src/reportWebVitals.js":"3","/home/chrisb/Coding/Personal Projects/Maths-Games/Transformation-Station/src/Header.js":"4","/home/chrisb/Coding/Personal Projects/Maths-Games/Transformation-Station/src/Footer.js":"5","/home/chrisb/Coding/Personal Projects/Maths-Games/Transformation-Station/src/Main.js":"6"},{"size":535,"mtime":1691572557291,"results":"7","hashOfConfig":"8"},{"size":305,"mtime":1691572798554,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1691572557292,"results":"10","hashOfConfig":"8"},{"size":262,"mtime":1691573687299,"results":"11","hashOfConfig":"8"},{"size":252,"mtime":1691574004484,"results":"12","hashOfConfig":"8"},{"size":5947,"mtime":1691597725626,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h0l8dq",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"/home/chrisb/Coding/Personal Projects/Maths-Games/Transformation-Station/src/index.js",[],[],"/home/chrisb/Coding/Personal Projects/Maths-Games/Transformation-Station/src/App.js",["34"],[],"import Header from './Header.js';\nimport Footer from './Footer.js'\nimport Main from './Main.js'\nimport React, {useState} from \"react\";\nimport './Style.css';\n\n\nconst App = () => {\n\n\n  return (\n    <div className=\"container\">\n    <Header />\n    <Main />\n    <Footer />\n    </div>\n)\n}\n\n\nexport default App\n\n\n","/home/chrisb/Coding/Personal Projects/Maths-Games/Transformation-Station/src/reportWebVitals.js",[],[],"/home/chrisb/Coding/Personal Projects/Maths-Games/Transformation-Station/src/Header.js",[],[],"/home/chrisb/Coding/Personal Projects/Maths-Games/Transformation-Station/src/Footer.js",[],[],"/home/chrisb/Coding/Personal Projects/Maths-Games/Transformation-Station/src/Main.js",["35","36","37","38","39","40","41","42","43"],[],"import './Style.css';\nimport React, { useState, useRef, useEffect } from \"react\";\nimport heart from './gameheart.png'\nimport triangle from './triangle1.png'\nimport targettriangle from './triangle2.svg.png'\nimport correcttriangle from './green-triangle-3.png'\n\n\n\n\n\n\n\nconst Main = () => {\n\n\nlet startingLocation\ndo {\n    (startingLocation = Math.floor(Math.random()*80)+20)\n}\nwhile (startingLocation % 10 ===9)\nlet targetLocation \ndo {\n    (targetLocation = Math.floor(Math.random()*80)+20)\n}\nwhile (targetLocation % 10 ===9)\n \n\nconst [shapeState, setShapeState] = useState([startingLocation, startingLocation-10, startingLocation-20, startingLocation+1])\nconst [targetShapeState, setTargetShapeState] = useState([targetLocation, targetLocation-10, targetLocation-20,targetLocation+1])\nconst [correctShapeState, setCorrectShapeState] = useState()\nconst [userXAnswer, setUserXAnswer] = useState()\nconst [userYAnswer, setUserYAnswer] = useState()\nconst [userMirrorAxis, setUserMirrorAxis] = useState()\nconst [userMirrorValue, setUserMirrorValue] = useState()\n\n\n\n\nconst gridSquares = () => {\n    let gridArray = []\n    for(let i = 0; i < 100; i++){\n        if (shapeState.includes(i)){\n            gridArray.push(<div key={i} id =\"shape\" className=\"grid-item\" \n            style={{\n                backgroundColor: correctShapeState ?  \"green\" : \"#366ed8\"\n            }}></div>)\n        }\n        else if (targetShapeState.includes(i)){\n            gridArray.push(<div key={i} id =\"shape\" className=\"grid-item\" \n            style={{\n                backgroundColor: \"#041562\"\n            }}></div>)\n        }\n        else if (i % 5 === 0 && i % 10 !==0 && i !==55){\n            gridArray.push(<div key={i} id =\"grid-{i}\" className=\"grid-item y-axis\">{(i+5)/(-10)+6}</div>)\n        }\n        else if (i >49 && i <60 && i !==55){\n            gridArray.push(<div key={i} id =\"grid-{i}\" className=\"grid-item x-axis\">{i-55}</div>)\n        }     \n        else if (i===55){\n            gridArray.push(<div key={i} id =\"grid-{i}\" className=\"grid-item x-axis y-axis\">{i-55}</div>)\n        } else {\n            gridArray.push(<div key={i} id =\"grid-{i}\" className=\"grid-item\">{i}</div>)\n        }\n        \n           \n    }\n    return gridArray\n}\n\nconst translate = () => {\n    \n    setShapeState(shapeState.map((x) => x + userXAnswer + (userYAnswer*(-10))))\n\n}\n\n\nconst reflecty = () => {\n    let mirror = 50-userMirrorValue*10\n    setShapeState(shapeState.map((x) => {if (mirror > x){\n        if (mirror - x < 10){\n            return  x+10\n        } else {\n            return x + 2*(mirror - Math.floor(x/10)*10) - 10\n        }\n    }\n        else if (mirror <= x){\n            if (x- mirror < 10){\n                return x - 10\n            } else {\n            return x + 2*(mirror - Math.floor(x/10)*10) - 10\n        } \n    }\n    \n\n}))\n}\n\nconst reflectx = () => {\n    let mirror = 5+userMirrorValue\n    setShapeState(shapeState.map((x) => {if (mirror > x % 10){\n        if (mirror - x  % 10<= 1){\n            return  x + 1\n        } else {\n            return x + 2*(mirror - x % 10) - 1\n        }\n    }\n        else if (mirror <= x % 10){\n            if (x- mirror < 1){\n                return x - 1\n            } else {\n            return x + 2*(mirror - (x % 10)) - 1\n        } \n    }\n    \n\n}))\n}\n\n\n\nconst reflect = () => {\n    if (userMirrorAxis===\"y\"){\n    reflecty()\n    }\n    if (userMirrorAxis===\"x\"){\n        reflectx()\n    }\n}\n\n\nconst handleXChange = event => {\n    setUserXAnswer(parseInt(event.target.value))\n}\n\nconst handleYChange = event => {\n    setUserYAnswer(parseInt(event.target.value))\n}\n\nconst handleMirrorAxisChange = event => {\n    setUserMirrorAxis(event.target.value)\n}\n\nconst handleMirrorValueChange = event => {\n    setUserMirrorValue(parseInt(event.target.value))\n}\n\n\nuseEffect(() => {\n    console.log(shapeState)\n    console.log(targetShapeState)\n    console.log(correctShapeState)\n    if(arraysEqual(shapeState,targetShapeState)){\n    setCorrectShapeState(true)\n    } else setCorrectShapeState(false)\n}, [shapeState])\n\n\nfunction arraysEqual(a, b) {\n    if (a === b) return true;\n    if (a == null || b == null) return false;\n    if (a.length !== b.length) return false;\n    for (var i = 0; i < a.length; ++i) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n\n\nconst vectorTranslation = () => {\n    return(<div className=\"bracket-div\"><p>Translation Vector: </p><p className=\"bracketClass\">(</p>\n        <div className = \"vector-div\">\n            <input type=\"text\"\n             id=\"userXAnswer\" \n             name=\"userXAnswer\"  \n             onChange={handleXChange} \n              />\n             <input type=\"text\"\n             id=\"userYAnswer\" \n             name=\"userYAnswer\"  \n             onChange={handleYChange} \n             />\n        </div><p className=\"bracketClass\">)</p>\n        </div>\n    )\n    \n    }\n\nconst reflection = () => {\n    return(\n        <div className = \"reflection-div\">\n            Mirror Line: <div><input type=\"text\"\n             id=\"userMirrorAxisAnswer\" \n             name=\"userMirrorAxisAnswer\"  \n             onChange={handleMirrorAxisChange} \n             /> = \n            <input type=\"text\"\n             id=\"userMirrorValueAnswer\" \n             name=\"userMirrorValueAnswer\"  \n             onChange={handleMirrorValueChange} \n             /></div>\n             \n        </div>\n       \n    )\n    \n    }\n\n\n\n\n    return (\n        <div className='main'>\n        <div className=\"main-grid\">\n            {gridSquares()}\n            \n            </div>     \n            <div className = \"transformation-button-div\">\n            {vectorTranslation()}\n            \n            \n            <button onClick={translate}>Translate</button> \n\n\n        </div>\n        <div className = \"transformation-button-div\">\n            {reflection()}\n            \n            \n            <button onClick={reflect}>Reflect</button> \n\n\n        </div>\n\n\n\n        </div>\n    )\n\n}\n\nexport default Main",{"ruleId":"44","severity":1,"message":"45","line":4,"column":16,"nodeType":"46","messageId":"47","endLine":4,"endColumn":24},{"ruleId":"44","severity":1,"message":"48","line":2,"column":27,"nodeType":"46","messageId":"47","endLine":2,"endColumn":33},{"ruleId":"44","severity":1,"message":"49","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":13},{"ruleId":"44","severity":1,"message":"50","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":16},{"ruleId":"44","severity":1,"message":"51","line":5,"column":8,"nodeType":"46","messageId":"47","endLine":5,"endColumn":22},{"ruleId":"44","severity":1,"message":"52","line":6,"column":8,"nodeType":"46","messageId":"47","endLine":6,"endColumn":23},{"ruleId":"44","severity":1,"message":"53","line":30,"column":26,"nodeType":"46","messageId":"47","endLine":30,"endColumn":45},{"ruleId":"54","severity":1,"message":"55","line":81,"column":38,"nodeType":"56","messageId":"57","endLine":81,"endColumn":40},{"ruleId":"54","severity":1,"message":"55","line":102,"column":38,"nodeType":"56","messageId":"57","endLine":102,"endColumn":40},{"ruleId":"58","severity":1,"message":"59","line":157,"column":4,"nodeType":"60","endLine":157,"endColumn":16,"suggestions":"61"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'heart' is defined but never used.","'triangle' is defined but never used.","'targettriangle' is defined but never used.","'correcttriangle' is defined but never used.","'setTargetShapeState' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'correctShapeState' and 'targetShapeState'. Either include them or remove the dependency array.","ArrayExpression",["62"],{"desc":"63","fix":"64"},"Update the dependencies array to be: [correctShapeState, shapeState, targetShapeState]",{"range":"65","text":"66"},[4020,4032],"[correctShapeState, shapeState, targetShapeState]"]